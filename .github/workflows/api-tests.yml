name: API Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set SPRINT env
        run: echo "SPRINT=sprint5-with-bugs" >> $GITHUB_ENV
      - name: Copy .env
        run: cp ${SPRINT}/API/.env.example ${SPRINT}/API/.env
      - name: Update .env for CI
        run: |
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=toolshop/' ${SPRINT}/API/.env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=user/' ${SPRINT}/API/.env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' ${SPRINT}/API/.env
          sed -i 's/DB_HOST=.*/DB_HOST=mariadb/' ${SPRINT}/API/.env
          sed -i 's/MAIL_MAILER=.*/MAIL_MAILER=log/' ${SPRINT}/API/.env

      - name: Start containers
        run: |
          docker compose up -d --build
          
      - name: Install Composer dependencies
        run: docker compose run --rm composer install --no-interaction --prefer-dist --optimize-autoloader
      
      - name: Fix storage permissions
        run: docker compose exec -T --user root laravel-api chmod -R 777 storage bootstrap/cache


      - name: Run migrations and seed
        run: docker compose exec -T -e APP_ENV=local laravel-api php artisan migrate:fresh --seed

      - name: Verify API is responding
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:8091/; then
              echo "✅ API is responding on localhost:8091"
              exit 0
            fi
            echo "API not ready yet, retrying..."
            sleep 2
          done
          echo "❌ API did not respond on localhost:8091" >&2
          exit 1

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Newman
        run: npm install -g newman

      - name: Run Register API tests
        run: newman run sprint5-with-bugs/API/tests/register_collection.json --iteration-data sprint5-with-bugs/API/tests/register_data.csv --environment sprint5-with-bugs/API/tests/api_environment.json --suppress-exit-code

      - name: Run Login API tests
        run: newman run sprint5-with-bugs/API/tests/login_collection.json --iteration-data sprint5-with-bugs/API/tests/login_data.csv --environment sprint5-with-bugs/API/tests/api_environment.json --suppress-exit-code

      - name: Run Forgot Password API tests
        run: newman run sprint5-with-bugs/API/tests/forgot_password_collection.json --iteration-data sprint5-with-bugs/API/tests/forgot_password_data.csv --environment sprint5-with-bugs/API/tests/api_environment.json --suppress-exit-code

      - name: Stop containers
        if: always()
        run: docker compose down -v
